{
  "name": "ai-input-09",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { Plus, Mic, File, Camera, X, ArrowRight } from \"lucide-react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { cn } from \"@/lib/utils\";\n\ninterface FileDisplayProps {\n    fileName: string;\n    onClear: () => void;\n}\n\nconst FileDisplay = ({ fileName, onClear }: FileDisplayProps) => (\n    <div className=\"flex items-center gap-2 bg-black/5 dark:bg-white/5 w-fit px-3 py-1 rounded-lg group\">\n        <File className=\"w-4 h-4 dark:text-white\" />\n        <span className=\"text-sm dark:text-white\">{fileName}</span>\n        <button\n            type=\"button\"\n            onClick={onClear}\n            className=\"ml-1 p-0.5 rounded-full hover:bg-black/10 dark:hover:bg-white/10 transition-colors\"\n        >\n            <X className=\"w-3 h-3 dark:text-white\" />\n        </button>\n    </div>\n);\n\nexport default function AIInput_09() {\n    const [inputValue, setInputValue] = useState<string>(\"\");\n    const [selectedFileName, setSelectedFileName] = useState<string>(\"\");\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files?.[0]) {\n            setSelectedFileName(e.target.files[0].name);\n        }\n    };\n\n    const handleClearFile = () => {\n        setSelectedFileName(\"\");\n        if (fileInputRef.current) {\n            fileInputRef.current.value = \"\";\n        }\n    };\n\n    useEffect(() => {\n        const adjustHeight = () => {\n            const textarea = textareaRef.current;\n            if (textarea) {\n                const currentHeight = textarea.style.height;\n                textarea.style.height = \"auto\";\n                const scrollHeight = textarea.scrollHeight;\n                textarea.style.height = currentHeight;\n                requestAnimationFrame(() => {\n                    textarea.style.height = `${scrollHeight}px`;\n                });\n            }\n        };\n\n        adjustHeight();\n    }, []);\n\n    const handleFileUpload = () => {\n        fileInputRef.current?.click();\n        setIsMenuOpen(false);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            setInputValue(\"\");\n        }\n    };\n\n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            const target = event.target as HTMLElement;\n            if (isMenuOpen && !target.closest(\".action-menu-container\")) {\n                setIsMenuOpen(false);\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [isMenuOpen]);\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"relative max-w-xl w-full mx-auto flex flex-col gap-2\">\n                {selectedFileName && (\n                    <FileDisplay\n                        fileName={selectedFileName}\n                        onClear={handleClearFile}\n                    />\n                )}\n\n                <div className=\"relative\">\n                    <div className=\"absolute left-3 top-1/2 -translate-y-1/2 action-menu-container\">\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsMenuOpen(!isMenuOpen)}\n                            className=\"rounded-3xl bg-black/5 dark:bg-white/5 py-2 px-2 hover:bg-black/10 dark:hover:bg-white/10 transition-colors\"\n                        >\n                            <Plus className=\"w-4 h-4 dark:text-white\" />\n                        </button>\n\n                        {isMenuOpen && (\n                            <div className=\"absolute left-0 top-full mt-1 bg-white dark:bg-zinc-800 rounded-lg shadow-lg py-1 min-w-[140px] z-50 border border-black/10 dark:border-white/10\">\n                                <button\n                                    type=\"button\"\n                                    className=\"w-full px-3 py-1.5 flex items-center gap-2 hover:bg-black/5 dark:hover:bg-white/5 text-sm dark:text-white\"\n                                    onClick={handleFileUpload}\n                                >\n                                    <File className=\"w-3.5 h-3.5 dark:text-white\" />\n                                    <span>Upload File</span>\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"w-full px-3 py-1.5 flex items-center gap-2 hover:bg-black/5 dark:hover:bg-white/5 text-sm dark:text-white\"\n                                    onClick={() => setIsMenuOpen(false)}\n                                >\n                                    <Mic className=\"w-3.5 h-3.5 dark:text-white\" />\n                                    <span>Voice Input</span>\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"w-full px-3 py-1.5 flex items-center gap-2 hover:bg-black/5 dark:hover:bg-white/5 text-sm dark:text-white\"\n                                    onClick={() => setIsMenuOpen(false)}\n                                >\n                                    <Camera className=\"w-3.5 h-3.5 dark:text-white\" />\n                                    <span>Take Photo</span>\n                                </button>\n                            </div>\n                        )}\n                    </div>\n\n                    <input\n                        type=\"file\"\n                        className=\"hidden\"\n                        ref={fileInputRef}\n                        onChange={handleFileSelect}\n                    />\n\n                    <Textarea\n                        id=\"input-09\"\n                        placeholder=\"Ask me anything!\"\n                        className=\"max-w-xl bg-black/5 dark:bg-white/5 w-full rounded-3xl pl-14 pr-10 py-4 placeholder:text-black/70 dark:placeholder:text-white/70 border-none ring-black/30 dark:ring-white/30 text-black dark:text-white resize-none text-wrap min-h-[40px]\"\n                        rows={1}\n                        ref={textareaRef}\n                        value={inputValue}\n                        onKeyDown={handleKeyDown}\n                        onChange={(e) => {\n                            setInputValue(e.target.value);\n                            if (textareaRef.current) {\n                                textareaRef.current.style.height = \"auto\";\n                                textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n                            }\n                        }}\n                    />\n\n                    <button\n                        className=\"absolute right-3 top-1/2 -translate-y-1/2 rounded-xl bg-black/5 dark:bg-white/5 py-1 px-1\"\n                        type=\"button\"\n                    >\n                        <ArrowRight\n                            className={cn(\n                                \"w-4 h-4 transition-opacity dark:text-white\",\n                                inputValue ? \"opacity-100\" : \"opacity-30\"\n                            )}\n                        />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "ui/ai-input-09.tsx",
      "target": "components/ui/ai-input-09.tsx"
    }
  ]
}