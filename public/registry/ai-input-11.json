{
  "name": "ai-input-11",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "content": "\"use client\";\n\nimport { ArrowRight, Bot } from \"lucide-react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { cn } from \"@/lib/utils\";\n\nconst AI_AGENTS = [\n    { name: \"Copywriter Agent\", description: \"Write anything you want\" },\n    { name: \"Nextjs Agent\", description: \"Write code for anything you want\" },\n].map((model) => ({ ...model }));\n\nexport default function AIInput_11() {\n    const [state, setState] = useState({\n        value: \"\",\n        fileName: \"\",\n        selectedModel: \"Copywriter Agent\",\n        isModelMenuOpen: false,\n    });\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const menuRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        function handleClickOutside(event: MouseEvent) {\n            if (\n                menuRef.current &&\n                !menuRef.current.contains(event.target as Node)\n            ) {\n                updateState({ isModelMenuOpen: false });\n            }\n        }\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () =>\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n\n    const updateState = (updates: Partial<typeof state>) =>\n        setState((prev) => ({ ...prev, ...updates }));\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            updateState({ value: \"\" });\n        }\n    };\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"rounded-xl bg-black/5 dark:bg-white/5\">\n                <div className=\"relative\">\n                    <div className=\"px-2 pt-2 pb-2 flex items-center\">\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                updateState({\n                                    isModelMenuOpen: !state.isModelMenuOpen,\n                                })\n                            }\n                            className=\"flex items-center p-1.5 hover:bg-black/5 dark:hover:bg-white/5 rounded-lg\"\n                        >\n                            <Bot className=\"w-4 h-4 dark:text-white\" />\n                        </button>\n\n                        <div className=\"h-6 w-[1px] bg-black/10 dark:bg-white/10 mx-2\" />\n\n                        <Textarea\n                            id=\"input-01\"\n                            placeholder=\"Ask me anything!\"\n                            className=\"max-w-xl w-full rounded-3xl pl-2 pr-10 placeholder:text-black/70 dark:placeholder:text-white/70 border-none ring-black/30 dark:ring-white/30 text-black dark:text-white resize-none text-wrap py-2 bg-transparent min-h-[36px] focus-visible:ring-0 focus-visible:ring-offset-0\"\n                            rows={1}\n                            ref={textareaRef}\n                            value={state.value}\n                            onChange={(e) => {\n                                updateState({ value: e.target.value });\n                                if (textareaRef.current) {\n                                    textareaRef.current.style.height = \"auto\";\n                                    textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n                                }\n                            }}\n                            onKeyDown={handleKeyDown}\n                        />\n\n                        <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n                            <button\n                                type=\"button\"\n                                className=\"rounded-xl bg-black/5 dark:bg-white/5 p-1\"\n                            >\n                                <ArrowRight\n                                    className={cn(\n                                        \"w-4 h-4 dark:text-white\",\n                                        state.value\n                                            ? \"opacity-100\"\n                                            : \"opacity-30\"\n                                    )}\n                                />\n                            </button>\n                        </div>\n                    </div>\n\n                    <div className=\"absolute -bottom-5 left-1 flex items-center gap-1.5 text-[10px] text-muted-foreground dark:text-white/50\">\n                        <span>{state.selectedModel}</span>\n                    </div>\n\n                    {/* Model Selection Menu */}\n                    {state.isModelMenuOpen && (\n                        <div\n                            ref={menuRef}\n                            className=\"absolute top-12 left-2 mt-1 bg-white dark:bg-zinc-800 rounded-lg shadow-lg border border-black/10 dark:border-white/10 py-1 w-72 z-10\"\n                        >\n                            {AI_AGENTS.map((model) => (\n                                <button\n                                    key={model.name}\n                                    type=\"button\"\n                                    onClick={() => {\n                                        updateState({\n                                            selectedModel: model.name,\n                                            isModelMenuOpen: false,\n                                        });\n                                    }}\n                                    className=\"w-full px-3 py-1.5 text-left hover:bg-black/5 dark:hover:bg-white/5 flex items-center gap-2\"\n                                >\n                                    <div>\n                                        <div className=\"text-sm dark:text-white\">\n                                            {model.name}\n                                        </div>\n                                        <div className=\"text-xs text-black/50 dark:text-white/50\">\n                                            {model.description}\n                                        </div>\n                                    </div>\n                                </button>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/ai-input-11.tsx",
      "target": "components/components/ai-input-11.tsx"
    }
  ]
}