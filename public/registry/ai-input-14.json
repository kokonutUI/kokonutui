{
  "name": "ai-input-14",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "content": "\"use client\";\n\nimport { ArrowRight, Brain } from \"lucide-react\";\nimport { useRef, useState } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function AIInput_14() {\n    const [value, setValue] = useState(\"\");\n    const [useMemory, setUseMemory] = useState(false);\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            setValue(\"\");\n        }\n    };\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"flex flex-col gap-4\">\n                <div className=\"bg-black/5 dark:bg-white/5 rounded-xl relative\">\n                    <div className=\"relative px-2 py-2\">\n                        <Textarea\n                            value={value}\n                            placeholder=\"Type your message...\"\n                            className=\"w-full rounded-xl px-4 border-none resize-none bg-transparent focus-visible:ring-0 focus-visible:ring-offset-0 dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70 min-h-[40px]\"\n                            rows={1}\n                            ref={textareaRef}\n                            onKeyDown={handleKeyDown}\n                            onChange={(e) => {\n                                setValue(e.target.value);\n                                if (textareaRef.current) {\n                                    textareaRef.current.style.height = \"auto\";\n                                    textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n                                }\n                            }}\n                        />\n\n                        <button\n                            type=\"button\"\n                            className=\"absolute right-3 top-1/2 -translate-y-1/2 rounded-xl bg-black/5 dark:bg-white/5 p-1\"\n                        >\n                            <ArrowRight\n                                className={cn(\n                                    \"w-4 h-4 dark:text-white\",\n                                    value ? \"opacity-100\" : \"opacity-30\"\n                                )}\n                            />\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"flex justify-end\">\n                    <button\n                        type=\"button\"\n                        onClick={() => setUseMemory(!useMemory)}\n                        className=\"flex items-center gap-2 text-sm text-black/60 dark:text-white/60 hover:text-black dark:hover:text-white transition-colors\"\n                    >\n                        <Brain\n                            className={cn(\n                                \"w-4 h-4\",\n                                useMemory\n                                    ? \"text-blue-500 dark:text-blue-400\"\n                                    : \"text-black/40 dark:text-white/40\"\n                            )}\n                        />\n                        <span>Memory</span>\n                        <div\n                            className={cn(\n                                \"relative inline-flex h-5 w-9 items-center rounded-full transition-colors\",\n                                useMemory\n                                    ? \"bg-blue-500 dark:bg-blue-400\"\n                                    : \"bg-black/20 dark:bg-white/20\"\n                            )}\n                        >\n                            <div\n                                className={cn(\n                                    \"absolute h-4 w-4 transform rounded-full transition-transform shadow-sm\",\n                                    useMemory\n                                        ? \"translate-x-4 bg-white dark:bg-white\"\n                                        : \"translate-x-1 bg-white dark:bg-white\"\n                                )}\n                            />\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/ai-input-14.tsx",
      "target": "components/components/ai-input-14.tsx"
    }
  ]
}