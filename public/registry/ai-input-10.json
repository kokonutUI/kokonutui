{
  "name": "ai-input-10",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "content": "\"use client\";\n\nimport {\n    Plus,\n    File,\n    Camera,\n    X,\n    ArrowRight,\n    Brain,\n    ChevronDown,\n    Lock,\n    Unlock,\n} from \"lucide-react\";\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { cn } from \"@/lib/utils\";\n\nconst AI_MODELS = [\n    { name: \"GPT-4\", description: \"The popular kid\" },\n    { name: \"GPT-3.5\", description: \"Time flies, he is old now...\" },\n    { name: \"Claude\", description: \"Yes, the best for coding\" },\n].map((model) => ({ ...model, icon: <Brain className=\"w-4 h-4\" /> }));\n\nconst FileDisplay = ({\n    fileName,\n    onClear,\n}: {\n    fileName: string;\n    onClear: () => void;\n}) => (\n    <div className=\"flex items-center gap-2 bg-black/5 dark:bg-white/5 w-fit px-3 py-1 rounded-lg\">\n        <File className=\"w-4 h-4 dark:text-white\" />\n        <span className=\"text-sm dark:text-white\">{fileName}</span>\n        <button\n            type=\"button\"\n            onClick={onClear}\n            className=\"ml-1 p-0.5 rounded-full hover:bg-black/10 dark:hover:bg-white/10\"\n        >\n            <X className=\"w-3 h-3 dark:text-white\" />\n        </button>\n    </div>\n);\n\nexport default function AIInput_10() {\n    const [state, setState] = useState({\n        value: \"\",\n        fileName: \"\",\n        isPrivacyMode: false,\n        selectedModel: \"GPT-4\",\n        isMenuOpen: false,\n        isModelMenuOpen: false,\n    });\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    const updateState = useCallback(\n        (updates: Partial<typeof state>) =>\n            setState((prev) => ({ ...prev, ...updates })),\n        []\n    );\n\n    useEffect(() => {\n        const handleClickOutside = (e: MouseEvent) => {\n            const target = e.target as HTMLElement;\n            if (state.isMenuOpen && !target.closest(\"[data-action-menu]\")) {\n                updateState({ isMenuOpen: false });\n            }\n            if (state.isModelMenuOpen && !target.closest(\"[data-model-menu]\")) {\n                updateState({ isModelMenuOpen: false });\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () =>\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, [state.isMenuOpen, state.isModelMenuOpen, updateState]);\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            updateState({ value: \"\" });\n        }\n    };\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"rounded-xl bg-black/5 dark:bg-white/5\">\n                <div className=\"border-b border-black/10 dark:border-white/10\">\n                    <div className=\"flex justify-between items-center px-4 py-2 text-sm text-zinc-600 dark:text-zinc-400\">\n                        <div className=\"relative\" data-model-menu>\n                            <button\n                                type=\"button\"\n                                onClick={() =>\n                                    updateState({\n                                        isModelMenuOpen: !state.isModelMenuOpen,\n                                    })\n                                }\n                                className=\"flex items-center gap-1.5 hover:bg-black/5 dark:hover:bg-white/5 rounded-lg px-2 py-1\"\n                            >\n                                <Brain className=\"w-4 h-4 dark:text-white\" />\n                                <span className=\"dark:text-white\">\n                                    {state.selectedModel}\n                                </span>\n                                <ChevronDown className=\"w-3 h-3 ml-0.5 dark:text-white\" />\n                            </button>\n\n                            {state.isModelMenuOpen && (\n                                <div className=\"absolute top-full left-0 mt-1 w-64 bg-white dark:bg-zinc-800 rounded-md shadow-lg py-1 z-50 border border-black/10 dark:border-white/10\">\n                                    {AI_MODELS.map((model) => (\n                                        <button\n                                            type=\"button\"\n                                            key={model.name}\n                                            className=\"w-full px-3 py-1.5 text-left hover:bg-black/5 dark:hover:bg-white/5 flex items-center gap-2 text-sm transition-colors dark:text-white\"\n                                            onClick={() =>\n                                                updateState({\n                                                    selectedModel: model.name,\n                                                    isModelMenuOpen: false,\n                                                })\n                                            }\n                                        >\n                                            <div className=\"flex items-center gap-2 flex-1\">\n                                                {model.icon}\n                                                <span>{model.name}</span>\n                                            </div>\n                                            <span className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                                                {model.description}\n                                            </span>\n                                        </button>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                updateState({\n                                    isPrivacyMode: !state.isPrivacyMode,\n                                })\n                            }\n                            className={cn(\n                                \"flex items-center gap-2 p-1.5 rounded-lg hover:bg-black/5 dark:hover:bg-white/5\",\n                                state.isPrivacyMode\n                                    ? \"text-green-600\"\n                                    : \"text-zinc-600 dark:text-zinc-400\"\n                            )}\n                        >\n                            {state.isPrivacyMode ? (\n                                <Lock className=\"w-4 h-4\" />\n                            ) : (\n                                <Unlock className=\"w-4 h-4\" />\n                            )}\n                            <span>Privacy</span>\n                        </button>\n                    </div>\n                </div>\n\n                {/* File Display */}\n                {state.fileName && (\n                    <div className=\"px-4 pt-2\">\n                        <FileDisplay\n                            fileName={state.fileName}\n                            onClear={() => {\n                                updateState({ fileName: \"\" });\n                                if (fileInputRef.current)\n                                    fileInputRef.current.value = \"\";\n                            }}\n                        />\n                    </div>\n                )}\n\n                {/* Input Area */}\n                <div className=\"relative px-2 py-2\">\n                    {/* Action Menu */}\n                    <div\n                        className=\"absolute left-3 top-1/2 -translate-y-1/2\"\n                        data-action-menu\n                    >\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                updateState({ isMenuOpen: !state.isMenuOpen })\n                            }\n                            className=\"rounded-3xl bg-black/5 dark:bg-white/5 p-2 hover:bg-black/10 dark:hover:bg-white/10\"\n                        >\n                            <Plus className=\"w-4 h-4 dark:text-white\" />\n                        </button>\n\n                        {state.isMenuOpen && (\n                            <div className=\"absolute left-0 top-full mt-1 bg-white dark:bg-zinc-800 rounded-md shadow-lg py-1 min-w-[140px] z-50 border border-black/10 dark:border-white/10\">\n                                {[\n                                    {\n                                        icon: File,\n                                        label: \"Upload File\",\n                                        onClick: () =>\n                                            fileInputRef.current?.click(),\n                                    },\n                                    { icon: Camera, label: \"Take Photo\" },\n                                ].map(({ icon: Icon, label, onClick }) => (\n                                    <button\n                                        type=\"button\"\n                                        key={label}\n                                        onClick={onClick}\n                                        className=\"w-full px-3 py-1.5 flex items-center gap-2 hover:bg-black/5 dark:hover:bg-white/5 text-sm transition-colors dark:text-white\"\n                                    >\n                                        <Icon className=\"w-4 h-4 dark:text-white\" />\n                                        <span>{label}</span>\n                                    </button>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                    <Textarea\n                        ref={textareaRef}\n                        value={state.value}\n                        placeholder=\"Type your message...\"\n                        className=\"w-full rounded-xl pl-14 pr-10 border-none resize-none bg-transparent dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70 min-h-[40px] focus-visible:ring-0 focus-visible:ring-offset-0\"\n                        rows={1}\n                        onKeyDown={handleKeyDown}\n                        onChange={(e) => {\n                            updateState({ value: e.target.value });\n                            if (textareaRef.current) {\n                                textareaRef.current.style.height = \"auto\";\n                                textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n                            }\n                        }}\n                    />\n\n                    <button\n                        type=\"button\"\n                        className=\"absolute right-3 top-1/2 -translate-y-1/2 rounded-xl bg-black/5 dark:bg-white/5 p-1\"\n                    >\n                        <ArrowRight\n                            className={cn(\n                                \"w-4 h-4 dark:text-white\",\n                                state.value ? \"opacity-100\" : \"opacity-30\"\n                            )}\n                        />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/ai-input-10.tsx",
      "target": "components/components/ai-input-10.tsx"
    }
  ]
}