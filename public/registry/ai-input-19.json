{
  "name": "ai-input-19",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "content": "\"use client\";\n\nimport { useState, useRef, useCallback } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Sparkles, Lightbulb, Bug, Zap, Paperclip, Send } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nconst QUICK_ACTIONS = [\n    { label: \"Summarize\", icon: Sparkles },\n    { label: \"Explain\", icon: Lightbulb },\n    { label: \"Debug\", icon: Bug },\n    { label: \"Optimize\", icon: Zap },\n];\n\nexport default function AIInput_19() {\n    const [value, setValue] = useState(\"\");\n    const [isFocused, setIsFocused] = useState(false);\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const resetTextareaHeight = useCallback(() => {\n        if (textareaRef.current) {\n            textareaRef.current.style.height = \"56px\";\n        }\n    }, []);\n\n    const handleSubmit = useCallback(() => {\n        setValue(\"\");\n        setIsFocused(false);\n        resetTextareaHeight();\n    }, [resetTextareaHeight]);\n\n    const handleKeyDown = useCallback(\n        (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                handleSubmit();\n            }\n        },\n        [handleSubmit]\n    );\n\n    const adjustTextareaHeight = () => {\n        if (textareaRef.current) {\n            textareaRef.current.style.height = \"auto\";\n            const scrollHeight = textareaRef.current.scrollHeight;\n            const newHeight = Math.min(Math.max(56, scrollHeight), 200);\n            textareaRef.current.style.height = `${newHeight}px`;\n        }\n    };\n\n    const handleTextareaChange = (\n        e: React.ChangeEvent<HTMLTextAreaElement>\n    ) => {\n        setValue(e.target.value);\n        setIsFocused(true);\n        setTimeout(adjustTextareaHeight, 0);\n    };\n\n    const handleQuickAction = (label: string) => {\n        setValue(`${label}: `);\n        handleSubmit();\n    };\n\n    return (\n        <div className=\"w-full py-4 min-h-[244px]\">\n            <div className=\"relative\">\n                <div\n                    className={cn(\n                        \"relative bg-black/5 dark:bg-white/5 rounded-lg transition-all duration-300 ease-in-out\",\n                        \"min-h-[56px]\",\n                        isFocused && \"rounded-b-none\"\n                    )}\n                >\n                    <div className=\"relative flex-none min-h-[56px]\">\n                        <Textarea\n                            value={value}\n                            placeholder=\"Click to open dropdown...\"\n                            className={cn(\n                                \"w-full rounded-lg px-3 pr-16 border-none dark:text-white placeholder:text-black/60 dark:placeholder:text-white/60 resize-none focus-visible:ring-0 focus-visible:ring-offset-0 bg-transparent min-h-[40px] py-4\",\n                                !value && \"overflow-hidden\"\n                            )}\n                            rows={1}\n                            ref={textareaRef}\n                            onKeyDown={handleKeyDown}\n                            onChange={handleTextareaChange}\n                            onFocus={() => setIsFocused(true)}\n                            onBlur={() => setIsFocused(false)}\n                        />\n\n                        <div\n                            className={cn(\n                                \"absolute right-2 flex items-center gap-1 transition-all duration-300\",\n                                \"top-1/2 -translate-y-1/2\"\n                            )}\n                        >\n                            <label className=\"cursor-pointer rounded-md p-1.5 hover:bg-black/5 dark:hover:bg-white/5 transition-colors flex items-center justify-center\">\n                                <input type=\"file\" className=\"hidden\" />\n                                <Paperclip className=\"w-4 h-4 text-black/50 dark:text-white/50 hover:text-black/70 dark:hover:text-white/70\" />\n                            </label>\n                            <button\n                                type=\"submit\"\n                                onClick={handleSubmit}\n                                className={cn(\n                                    \"rounded-md p-1.5 transition-colors flex items-center justify-center\",\n                                    value\n                                        ? \"bg-sky-500/15 text-sky-500\"\n                                        : \"text-black/50 dark:text-white/50 hover:text-black/70 dark:hover:text-white/70\"\n                                )}\n                            >\n                                <Send className=\"w-4 h-4\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <AnimatePresence mode=\"wait\">\n                    {isFocused && (\n                        <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className=\"relative h-[1px] w-full\"\n                        >\n                            <div className=\"absolute inset-0 bg-black/10 dark:bg-white/10\" />\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n\n                <AnimatePresence mode=\"wait\">\n                    {isFocused && (\n                        <motion.div\n                            initial={{ opacity: 0, y: -10 }}\n                            animate={{\n                                opacity: 1,\n                                y: 0,\n                                transition: {\n                                    duration: 0.2,\n                                    ease: [0.4, 0, 0.2, 1],\n                                },\n                            }}\n                            exit={{\n                                opacity: 0,\n                                y: -10,\n                                transition: {\n                                    duration: 0.2,\n                                    ease: [0.4, 0, 0.2, 1],\n                                },\n                            }}\n                            className={cn(\n                                \"relative bg-black/5 dark:bg-white/5 rounded-lg overflow-hidden\",\n                                \"min-h-[56px]\",\n                                \"rounded-t-none\"\n                            )}\n                        >\n                            <div className=\"h-full px-2 overflow-y-auto scrollbar-thin scrollbar-thumb-black/10 dark:scrollbar-thumb-white/10 scrollbar-track-transparent\">\n                                <motion.div\n                                    className=\"py-2 space-y-1\"\n                                    initial=\"hidden\"\n                                    animate=\"show\"\n                                    exit=\"exit\"\n                                    variants={{\n                                        show: {\n                                            transition: {\n                                                staggerChildren: 0.05,\n                                            },\n                                        },\n                                        exit: {\n                                            transition: {\n                                                staggerChildren: 0.05,\n                                                staggerDirection: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n                                    {QUICK_ACTIONS.map((action, index) => (\n                                        <motion.button\n                                            key={action.label}\n                                            variants={{\n                                                hidden: {\n                                                    opacity: 0,\n                                                    y: 10,\n                                                    scale: 0.95,\n                                                },\n                                                show: {\n                                                    opacity: 1,\n                                                    y: 0,\n                                                    scale: 1,\n                                                    transition: {\n                                                        duration: 0.15,\n                                                        ease: [0.4, 0, 0.2, 1],\n                                                    },\n                                                },\n                                                exit: {\n                                                    opacity: 0,\n                                                    y: 10,\n                                                    scale: 0.95,\n                                                    transition: {\n                                                        duration: 0.1,\n                                                        ease: [0.4, 0, 0.2, 1],\n                                                    },\n                                                },\n                                            }}\n                                            className=\"w-full px-2 py-2.5 text-sm text-left hover:bg-black/5 dark:hover:bg-white/5 rounded-md transition-colors flex items-center gap-2.5 group\"\n                                            onClick={() =>\n                                                handleQuickAction(action.label)\n                                            }\n                                        >\n                                            <div className=\"w-5 text-center flex items-center justify-center text-black/50 dark:text-white/50 group-hover:text-black/70 dark:group-hover:text-white/70\">\n                                                <action.icon className=\"w-4 h-4 transition-transform\" />\n                                            </div>\n                                            <span className=\"text-black/70 dark:text-white/70\">\n                                                {action.label}\n                                            </span>\n                                        </motion.button>\n                                    ))}\n                                </motion.div>\n                            </div>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/ai-input-19.tsx",
      "target": "components/components/ai-input-19.tsx"
    }
  ]
}