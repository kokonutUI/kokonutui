{
  "name": "ai-input-17",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "content": "\"use client\";\n\nimport { ArrowRight } from \"lucide-react\";\nimport { useState, useRef } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport clsx from \"clsx\";\n\nexport default function AIInput_17() {\n    const [value, setValue] = useState(\"\");\n    const [selectedDoc, setSelectedDoc] = useState<string | null>(null);\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    const [selectedTool, setSelectedTool] = useState<string | null>(null);\n\n    const handleDocSelect = (docTitle: string) => {\n        setSelectedDoc(selectedDoc === docTitle ? null : docTitle);\n    };\n\n    const handleToolSelect = (toolName: string) => {\n        setSelectedTool(selectedTool === toolName ? null : toolName);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            setValue(\"\");\n        }\n    };\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"bg-black/5 dark:bg-white/5 rounded-lg\">\n                    <div className=\"relative px-2 py-1.5\">\n                        <Textarea\n                            ref={textareaRef}\n                            value={value}\n                            placeholder=\"Type your message...\"\n                            className=\"w-full rounded-xl px-3 pr-12 border-none resize-none bg-transparent focus-visible:ring-0 focus-visible:ring-offset-0 shadow-none min-h-[40px] dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70\"\n                            rows={1}\n                            onKeyDown={handleKeyDown}\n                            onInput={(e) => {\n                                setValue(\n                                    (e.target as HTMLTextAreaElement).value\n                                );\n                                if (textareaRef.current) {\n                                    textareaRef.current.style.height = \"auto\";\n                                    textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n                                }\n                            }}\n                        />\n\n                        <button\n                            type=\"button\"\n                            className=\"absolute right-3 top-1/2 -translate-y-1/2 rounded-md bg-black/5 dark:bg-white/5 p-1.5 hover:bg-black/10 dark:hover:bg-white/10 transition-colors hover:scale-105 active:scale-95\"\n                        >\n                            <ArrowRight\n                                className={clsx(\n                                    \"w-3.5 h-3.5 dark:text-white\",\n                                    value ? \"opacity-100\" : \"opacity-50\"\n                                )}\n                            />\n                        </button>\n                    </div>\n                </div>\n\n                {/* Info Blocks Grid */}\n                <div className=\"grid grid-cols-2 gap-2\">\n                    {/* Quick Tools */}\n                    <div className=\"bg-black/5 dark:bg-white/5 rounded-lg p-2.5 transition-all\">\n                        <div className=\"flex items-center gap-2 mb-1.5\">\n                            <p className=\"text-xs font-medium text-black/70 dark:text-white/70\">\n                                Quick Tools\n                            </p>\n                        </div>\n\n                        <div className=\"flex flex-col gap-0.5\">\n                            {[\n                                { name: \"Code Explain\", icon: \"🔍\" },\n                                { name: \"Debug Help\", icon: \"🐛\" },\n                                { name: \"Optimize\", icon: \"⚡\" },\n                            ].map((tool) => (\n                                <button\n                                    type=\"button\"\n                                    key={tool.name}\n                                    onClick={() => handleToolSelect(tool.name)}\n                                    className={clsx(\n                                        \"group relative flex items-center justify-between p-1.5 text-xs rounded-md transition-all duration-200 hover:translate-x-0.5\",\n                                        selectedTool === tool.name\n                                            ? \"bg-black/5 dark:bg-white/5\"\n                                            : \"hover:bg-black/5 dark:hover:bg-white/5\"\n                                    )}\n                                >\n                                    <div className=\"flex items-center gap-1.5\">\n                                        <span className=\"text-xs\">{tool.icon}</span>\n                                        <span className=\"text-black/70 dark:text-white/70\">\n                                            {tool.name}\n                                        </span>\n                                    </div>\n\n                                    <div\n                                        className={clsx(\n                                            \"h-1.5 w-1.5 rounded-full bg-blue-500 dark:bg-blue-400 transition-all duration-200\",\n                                            selectedTool === tool.name\n                                                ? \"opacity-100 scale-100\"\n                                                : \"opacity-0 scale-80\"\n                                        )}\n                                    />\n\n                                    <div\n                                        className={clsx(\n                                            \"absolute left-0 top-0 h-full w-full -z-10 rounded-md bg-black/5 dark:bg-white/5 transition-all duration-200\",\n                                            selectedTool === tool.name\n                                                ? \"opacity-100\"\n                                                : \"opacity-0\"\n                                        )}\n                                    />\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"bg-black/5 dark:bg-white/5 rounded-lg p-2.5 transition-all\">\n                        <div className=\"flex items-center gap-2 mb-1.5\">\n                            <p className=\"text-xs font-medium text-black/70 dark:text-white/70\">\n                                Use Documentation\n                            </p>\n                        </div>\n\n                        <div className=\"flex flex-col gap-0.5\">\n                            {[\n                                { title: \"React Docs\", type: \"Official\", icon: \"⚛️\" },\n                                { title: \"Next.js\", type: \"Guide\", icon: \"▲\" },\n                                { title: \"TailwindCSS\", type: \"Ref\", icon: \"🎨\" },\n                            ].map((doc) => (\n                                <button\n                                    type=\"button\"\n                                    key={doc.title}\n                                    onClick={() => handleDocSelect(doc.title)}\n                                    className={clsx(\n                                        \"group relative flex items-center justify-between p-1.5 text-xs rounded-md transition-all duration-200 hover:translate-x-0.5\",\n                                        selectedDoc === doc.title\n                                            ? \"bg-black/5 dark:bg-white/5\"\n                                            : \"hover:bg-black/5 dark:hover:bg-white/5\"\n                                    )}\n                                >\n                                    <div className=\"flex items-center gap-1.5\">\n                                        <span className=\"text-xs\">{doc.icon}</span>\n                                        <span className=\"text-black/70 dark:text-white/70\">\n                                            {doc.title}\n                                        </span>\n                                    </div>\n                                    <div className=\"flex items-center gap-2\">\n                                        <span className=\"text-[10px] text-black/40 dark:text-white/40\">\n                                            {doc.type}\n                                        </span>\n\n                                        <div\n                                            className={clsx(\n                                                \"h-1.5 w-1.5 rounded-full bg-blue-500 dark:bg-blue-400 transition-all duration-200\",\n                                                selectedDoc === doc.title\n                                                    ? \"opacity-100 scale-100\"\n                                                    : \"opacity-0 scale-80\"\n                                            )}\n                                        />\n                                    </div>\n\n                                    <div\n                                        className={clsx(\n                                            \"absolute left-0 top-0 h-full w-full -z-10 rounded-md bg-black/5 dark:bg-white/5 transition-all duration-200\",\n                                            selectedDoc === doc.title\n                                                ? \"opacity-100\"\n                                                : \"opacity-0\"\n                                        )}\n                                    />\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/ai-input-17.tsx",
      "target": "components/components/ai-input-17.tsx"
    }
  ]
}