{
  "name": "pricing-02",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "tooltip"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Check, Sparkles, ArrowRight, Info } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n    Tooltip,\n    TooltipContent,\n    TooltipProvider,\n    TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Feature {\n    name: string;\n    included: boolean;\n    tooltip?: string;\n}\n\ninterface Pricing02Props {\n    tier: \"Starter\" | \"Pro\" | \"Enterprise\";\n    price: {\n        monthly: number;\n        yearly: number;\n    };\n    description: string;\n    features: Feature[];\n    popular?: boolean;\n    onSelect?: (tier: string) => void;\n}\n\nexport default function Pricing_02({\n    tier = \"Pro\",\n    price = {\n        monthly: 49,\n        yearly: 490,\n    },\n    description = \"Perfect for growing businesses that need more power and flexibility.\",\n    features = [\n        { name: \"Up to 10 team members\", included: true },\n        {\n            name: \"Advanced analytics\",\n            included: true,\n            tooltip: \"Includes user behavior tracking and custom reports\",\n        },\n        { name: \"Custom integrations\", included: true },\n        { name: \"API access\", included: true },\n        { name: \"24/7 phone support\", included: false },\n        { name: \"Custom branding\", included: false },\n    ],\n    popular = false,\n    onSelect = (tier: string) => console.log(`Selected ${tier} tier`),\n}: Pricing02Props) {\n    const [isYearly, setIsYearly] = useState(false);\n    const currentPrice = isYearly ? price.yearly : price.monthly;\n    const savings = Math.round((1 - price.yearly / 12 / price.monthly) * 100);\n\n    return (\n        <div className=\"relative w-full max-w-sm mx-auto\">\n            {popular && (\n                <div className=\"absolute -top-4 left-1/2 -translate-x-1/2 z-10\">\n                    <div\n                        className=\"flex items-center gap-1.5 px-3 py-1 rounded-full\n                        bg-gradient-to-r from-amber-500/90 to-orange-500/90 \n                        text-white text-sm font-medium shadow-lg shadow-orange-500/25\"\n                    >\n                        <Sparkles className=\"w-3.5 h-3.5\" />\n                        Most Popular\n                    </div>\n                </div>\n            )}\n\n            <div\n                className={cn(\n                    \"relative overflow-hidden rounded-2xl border-2 transition-colors duration-300\",\n                    \"bg-white dark:bg-zinc-900\",\n                    popular\n                        ? \"border-orange-500/50 dark:border-orange-400/50\"\n                        : \"border-zinc-200 dark:border-zinc-800\"\n                )}\n            >\n                <div className=\"p-8\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                        <h3 className=\"text-lg font-semibold text-zinc-900 dark:text-zinc-100\">\n                            {tier}\n                        </h3>\n                        <div className=\"flex items-center gap-2\">\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsYearly(false)}\n                                className={cn(\n                                    \"px-2.5 py-1 text-sm rounded-md transition-colors\",\n                                    !isYearly\n                                        ? \"bg-zinc-100 dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100\"\n                                        : \"text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100\"\n                                )}\n                            >\n                                Monthly\n                            </button>\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsYearly(true)}\n                                className={cn(\n                                    \"px-2.5 py-1 text-sm rounded-md transition-colors\",\n                                    isYearly\n                                        ? \"bg-zinc-100 dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100\"\n                                        : \"text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100\"\n                                )}\n                            >\n                                Yearly\n                            </button>\n                        </div>\n                    </div>\n\n                    <div className=\"flex items-baseline gap-2\">\n                        <span className=\"text-4xl font-bold text-zinc-900 dark:text-zinc-100\">\n                            ${currentPrice}\n                        </span>\n                        <span className=\"text-sm text-zinc-600 dark:text-zinc-400\">\n                            /{isYearly ? \"year\" : \"month\"}\n                        </span>\n                    </div>\n\n                    {isYearly && (\n                        <div className=\"mt-2 text-sm text-emerald-600 dark:text-emerald-400\">\n                            Save {savings}% with yearly billing\n                        </div>\n                    )}\n\n                    <p className=\"mt-4 text-sm text-zinc-600 dark:text-zinc-400\">\n                        {description}\n                    </p>\n                </div>\n\n                <div className=\"p-8 pt-4\">\n                    <div className=\"space-y-4\">\n                        {features.map((feature) => (\n                            <div\n                                key={feature.name}\n                                className=\"flex items-start gap-3\"\n                            >\n                                <div\n                                    className={`p-0.5 rounded-full mt-1\n                                    ${\n                                        feature.included\n                                            ? \"bg-emerald-500/20 text-emerald-600 dark:text-emerald-400\"\n                                            : \"bg-zinc-200/50 dark:bg-zinc-700/50 text-zinc-400 dark:text-zinc-600\"\n                                    }`}\n                                >\n                                    <Check className=\"w-3 h-3\" />\n                                </div>\n                                <div className=\"flex items-center gap-1.5\">\n                                    <span\n                                        className={`text-sm\n                                        ${\n                                            feature.included\n                                                ? \"text-zinc-700 dark:text-zinc-300\"\n                                                : \"text-zinc-500 dark:text-zinc-500\"\n                                        }`}\n                                    >\n                                        {feature.name}\n                                    </span>\n                                    {feature.tooltip && (\n                                        <TooltipProvider>\n                                            <Tooltip>\n                                                <TooltipTrigger>\n                                                    <Info className=\"w-3.5 h-3.5 text-zinc-400\" />\n                                                </TooltipTrigger>\n                                                <TooltipContent>\n                                                    <p className=\"text-xs\">\n                                                        {feature.tooltip}\n                                                    </p>\n                                                </TooltipContent>\n                                            </Tooltip>\n                                        </TooltipProvider>\n                                    )}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"p-8 pt-4\">\n                    <Button\n                        onClick={() => onSelect(tier)}\n                        className={cn(\n                            \"w-full group\",\n                            popular\n                                ? \"bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white\"\n                                : \"bg-zinc-900 dark:bg-zinc-100 hover:bg-zinc-800 dark:hover:bg-zinc-200 text-white dark:text-zinc-900\"\n                        )}\n                    >\n                        Get started\n                        <ArrowRight className=\"w-4 h-4 ml-2 transition-transform duration-200 group-hover:translate-x-1\" />\n                    </Button>\n                </div>\n\n                <div className=\"absolute inset-0 pointer-events-none\">\n                    <div\n                        className=\"absolute inset-x-0 top-0 h-px bg-gradient-to-r \n                        from-transparent via-zinc-200 dark:via-zinc-700 to-transparent\"\n                    />\n                    <div\n                        className=\"absolute inset-x-0 bottom-0 h-px bg-gradient-to-r \n                        from-transparent via-zinc-200 dark:via-zinc-700 to-transparent\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "pricing-02.tsx",
      "target": "components/pricing-02.tsx"
    }
  ]
}