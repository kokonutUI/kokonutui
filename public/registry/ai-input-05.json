{
  "name": "ai-input-05",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { CornerRightUp } from \"lucide-react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { cn } from \"@/lib/utils\";\nconst TEXT = \"What can i do for you?\";\nconst SPEED = 30;\n\nexport default function AIInput_05() {\n    const [inputValue, setInputValue] = useState(\"\");\n    const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n    const [displayText, setDisplayText] = useState(\"\");\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [isTypingComplete, setIsTypingComplete] = useState(false);\n\n    useEffect(() => {\n        if (currentIndex < TEXT.length) {\n            const timer = setTimeout(() => {\n                setDisplayText((prev) => prev + TEXT[currentIndex]);\n                setCurrentIndex((prev) => prev + 1);\n            }, SPEED);\n            return () => clearTimeout(timer);\n        }\n\n        const resetTimer = setTimeout(() => {\n            setDisplayText(\"\");\n            setCurrentIndex(0);\n            setIsTypingComplete(false);\n        }, 1000);\n\n        setIsTypingComplete(true);\n        return () => clearTimeout(resetTimer);\n    }, [currentIndex]);\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            setInputValue(\"\");\n        }\n    };\n\n    useEffect(() => {\n        const textarea = textareaRef.current;\n        if (textarea) {\n            textarea.style.height = \"auto\";\n            textarea.style.height = `${textarea.scrollHeight}px`;\n        }\n    }, []);\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"text-2xl p-4 bg-background min-h-[100px] flex items-center justify-center\">\n                <p className=\"text-black dark:text-white font-semibold\">\n                    {displayText}\n                    {!isTypingComplete && (\n                        <span className=\"animate-blink\">|</span>\n                    )}\n                </p>\n            </div>\n            <div className=\"relative max-w-xl w-full mx-auto\">\n                <Textarea\n                    placeholder=\"Ask me anything!\"\n                    className=\"max-w-xl bg-black/5 dark:bg-white/5 w-full rounded-3xl pl-4 pr-12 placeholder:text-black/70 dark:placeholder:text-white/70 border-none text-black dark:text-white resize-none text-wrap min-h-[40px] py-4\"\n                    rows={1}\n                    ref={textareaRef}\n                    value={inputValue}\n                    onKeyDown={handleKeyDown}\n                    onChange={(e) => {\n                        setInputValue(e.target.value);\n                        if (textareaRef.current) {\n                            textareaRef.current.style.height = \"auto\";\n                            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n                        }\n                    }}\n                />\n                <button\n                    className=\"absolute right-3 top-1/2 -translate-y-1/2 rounded-xl bg-black/5 dark:bg-white/5 py-1 px-1\"\n                    type=\"button\"\n                >\n                    <CornerRightUp\n                        className={cn(\n                            \"w-4 h-4 transition-opacity dark:text-white\",\n                            {\n                                \"opacity-100\": inputValue,\n                                \"opacity-30\": !inputValue,\n                            }\n                        )}\n                    />\n                </button>\n            </div>\n        </div>\n    );\n}\n",
      "path": "ui/ai-input-05.tsx",
      "target": "components/ui/ai-input-05.tsx"
    }
  ]
}